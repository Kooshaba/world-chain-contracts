// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { State } from "./../common.sol";

/**
 * @title ISmartDeployableSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ISmartDeployableSystem {
  function eveworld__setGlobalDeployableState(
    uint256 updatedBlockNumber,
    bool isPaused,
    uint256 lastGlobalOffline,
    uint256 lastGlobalOnline
  ) external;

  function eveworld__setIsPausedGlobalState(uint256 updatedBlockNumber, bool isPaused) external;

  function eveworld__setLastGlobalOffline(uint256 updatedBlockNumber, uint256 lastGlobalOffline) external;

  function eveworld__setLastGlobalOnline(uint256 updatedBlockNumber, uint256 lastGlobalOnline) external;

  function eveworld__setDeployableState(
    uint256 smartObjectId,
    uint256 createdAt,
    State previousState,
    State currentState,
    bool isValid,
    uint256 anchoredAt,
    uint256 updatedBlockNumber,
    uint256 updatedBlockTime
  ) external;

  function eveworld__setCreatedAt(uint256 smartObjectId, uint256 createdAt) external;

  function eveworld__setPreviousState(uint256 smartObjectId, State previousState) external;

  function eveworld__setCurrentState(uint256 smartObjectId, State currentState) external;

  function eveworld__setIsValid(uint256 smartObjectId, bool isValid) external;

  function eveworld__setAnchoredAt(uint256 smartObjectId, uint256 anchoredAt) external;

  function eveworld__setUpdatedBlockNumber(uint256 smartObjectId, uint256 updatedBlockNumber) external;

  function eveworld__setUpdatedBlockTime(uint256 smartObjectId, uint256 updatedBlockTime) external;

  function eveworld__setDeployableTokenTable(uint256 smartObjectId, address erc721Address) external;
}
