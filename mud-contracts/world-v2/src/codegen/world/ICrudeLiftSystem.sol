// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { EntityRecordData } from "../../namespaces/evefrontier/systems/entity-record/types.sol";
import { SmartObjectData } from "../../namespaces/evefrontier/systems/deployable/types.sol";
import { WorldPosition } from "../../namespaces/evefrontier/systems/location/types.sol";

/**
 * @title ICrudeLiftSystem
 * @author MUD (https://mud.dev) by Lattice (https://lattice.xyz)
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ICrudeLiftSystem {
  error LensNotInserted();
  error LensExhausted();
  error LensAlreadyInserted();
  error CannotRemoveLensWhileMining();
  error AlreadyMining();
  error NotMining();
  error RiftNotFoundOrDepleted();

  function evefrontier__createAndAnchorCrudeLift(
    uint256 smartObjectId,
    EntityRecordData memory entityRecordData,
    SmartObjectData memory smartObjectData,
    WorldPosition memory worldPosition,
    uint256 fuelUnitVolume,
    uint256 fuelConsumptionIntervalInSeconds,
    uint256 fuelMaxCapacity,
    uint256 storageCapacity,
    uint256 ephemeralStorageCapacity
  ) external;

  function evefrontier__insertLens(uint256 smartObjectId, address player) external;

  function evefrontier__startMining(uint256 smartObjectId, uint256 riftId) external;

  function evefrontier__stopMining(uint256 smartObjectId) external;

  function evefrontier__removeLens(uint256 smartObjectId, address receiver) external;
}
